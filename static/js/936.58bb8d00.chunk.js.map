{"version":3,"file":"static/js/936.58bb8d00.chunk.js","mappings":"+LACA,GAAiB,E,SCGJA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGC,MAAMC,QAAQN,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWO,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1B,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMX,GAEfE,UAAWC,EAAAA,KACXS,GAAE,kBAAaL,GAJjB,UAME,wBAAKC,GAAQC,KAJRF,EAOV,MAGR,C,iKCtBD,GAAiB,E,SC0CjB,MAlCA,WACE,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGaK,EAAAA,EAAAA,MAHb,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAMhBJ,EAAS,KAAIK,SANG,yBAQhBP,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACM,OAAVF,GACJO,EAAAA,OAAAA,QAAA,6BAAqCP,GACtC,GAAE,CAACA,KAGF,iCACE,eAAIhB,UAAWwB,EAAAA,MAAf,gCACCV,IAAa,SAACW,EAAA,EAAD,KACd,SAAC7B,EAAA,EAAD,CAAWC,UAAWe,MAG3B,C,yLCvCKc,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAINC,EAAO,mCAAG,WAAM5B,GAAN,yFACIqB,EAAUQ,IAAV,iBAAwB7B,EAAxB,aADJ,uBACX8B,EADW,EACXA,KADW,kBAEZA,EAAKC,MAFO,2CAAH,sDAOPC,EAAgB,mCAAG,WAAMC,GAAN,yFACPZ,EAAUQ,IAAI,gBAAiB,CACpDL,OAAQ,CAAES,MAAAA,KAFkB,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKI,SAJkB,2CAAH,sDAOhBnB,EAAS,mCAAG,sGACEM,EAAUQ,IAAI,wBADhB,uBACbC,EADa,EACbA,KADa,kBAEdA,EAAKI,SAFS,2CAAH,qDAKTC,EAAe,mCAAG,WAAMnC,GAAN,yFACNqB,EAAUQ,IAAV,iBAAwB7B,IADlB,uBACrB8B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAU,mCAAG,WAAMpC,GAAN,yFACDqB,EAAUQ,IAAV,iBAAwB7B,EAAxB,aADC,uBAChB8B,EADgB,EAChBA,KADgB,kBAEjBA,EAAKI,SAFY,2CAAH,qD","sources":["components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx","pages/Home/Home.module.css","pages/Home/Home.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title }) => {\n          return (\n            <Link\n              state={{ from: location }}\n              key={id}\n              className={css.item}\n              to={`/movies/${id}`}\n            >\n              <h3>{name || title}</h3>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { getTrends } from 'services/API';\nimport  Loader  from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Notify } from 'notiflix';\nimport s from './Home.module.css';\n\nimport React from 'react';\n\nfunction Home() {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getTrends();\n        setTrends(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`some error occured ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      <h2 className={s.title}>Trends of the week</h2>\n      {isLoading && <Loader />}\n      <MovieList movieList={trends} />\n    </>\n  );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c9d4617970f7c11d502d08245809af34',\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getCast = async id => {\n    const { data } = await moviesAPI.get(`/movie/${id}/credits`);\n    return data.cast;\n  };\n\n\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await moviesAPI.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getTrends = async () => {\n    const { data } = await moviesAPI.get('/trending/movie/week');\n    return data.results;\n  };\n\nexport const getMovieDetails = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}/reviews`);\n  return data.results;\n};"],"names":["MovieList","movieList","location","useLocation","className","css","Array","isArray","map","id","name","title","state","from","to","useState","trends","setTrends","isLoading","setIsLoading","error","setError","useEffect","fetchTrends","getTrends","receivedTrends","message","Notify","s","Loader","moviesAPI","axios","baseURL","params","api_key","language","include_adult","getCast","get","data","cast","getMoviesByQuery","query","results","getMovieDetails","getReviews"],"sourceRoot":""}